spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ecommerce_db
    password: postgres
    username: postgres
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true

server:
  port: 8091

feign:
  client:
    config:
      default:
        connectTimeout: 5000  # Sets the connection timeout to 5 seconds
        readTimeout: 10000
  retryer:
    maxAttempts: 3
    period: 2000
    maxPeriod: 5000
  product:
    service:
      name: ${PRODUCT_SERVICE_NAME:product-service}
  user:
    service:
      name: ${USER_SERVICE_NAME:user-service}

resilience4j:
  ratelimiter:
    instances:
      orderServiceRL:
        limit-for-period: 5          # max calls per refresh period
        limit-refresh-period: 10s    # refresh window
        timeout-duration: 2s         # how long to wait for a permission
  bulkhead:
    instances:
      orderServiceBH:
        max-concurrent-calls: 10     # how many parallel calls allowed
        max-wait-duration: 2s        # wait before rejecting
  circuitbreaker:
    instances:
      orderServiceCB:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
  retry:
    instances:
      paymentRetry:
        maxAttempts: 2
        waitDuration: 1s
        retryExceptions:
          - java.lang.RuntimeException

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html


      #      url: ${PRODUCT_SERVICE_URL:http://localhost:8092}
      #      path: ${PRODUCT_SERVICE_PATH:/api/v1/orders}